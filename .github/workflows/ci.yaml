jobs:
  _1_update_flake_locks:
    name: Update flake locks
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout this repo
        uses: actions/checkout@v3
      - name: Install Nix
        uses: cachix/install-nix-action@v20
        with:
          extra_nix_config: "access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}\nsubstituters = https://cache.nixos.org/ https://cache.iog.io https://nix-community.cachix.org https://deemp.cachix.org \ntrusted-public-keys = cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY= nix-community.cachix.org-1:mB9FSh9qf2dCimDSUo8Zy7bkq5CX+/rkCWyvRCYg3Fs= hydra.iohk.io:f/Ea+s+dFdN+3Y/G+FDgSq+a5NEWhJGzdjvKNGv0/EQ= deemp.cachix.org-1:9shDxyR2ANqEPQEEYDL/xIOnoPwxHot21L5fiZnFL18=\nstore = auto\nkeep-outputs = true\nkeep-derivations = true\n"
          install_url: https://releases.nixos.org/nix/nix-2.16.1/install
      - name: Config git for github-actions
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
      - name: Update flake locks
        run: |
          git pull --rebase --autostash

          nix build .#updateLocks
          nix run .#updateLocks

          git commit -a -m "action: Update flake locks" && git push || echo ""
  _2_front:
    name: Publish static files
    permissions:
      contents: write
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout this repo
        uses: actions/checkout@v3
      - name: Install Nix
        uses: cachix/install-nix-action@v20
        with:
          extra_nix_config: "access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}\nsubstituters = https://cache.nixos.org/ https://cache.iog.io https://nix-community.cachix.org https://deemp.cachix.org \ntrusted-public-keys = cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY= nix-community.cachix.org-1:mB9FSh9qf2dCimDSUo8Zy7bkq5CX+/rkCWyvRCYg3Fs= hydra.iohk.io:f/Ea+s+dFdN+3Y/G+FDgSq+a5NEWhJGzdjvKNGv0/EQ= deemp.cachix.org-1:9shDxyR2ANqEPQEEYDL/xIOnoPwxHot21L5fiZnFL18=\nstore = auto\nkeep-outputs = true\nkeep-derivations = true\n"
          install_url: https://releases.nixos.org/nix/nix-2.16.1/install
      - name: Restore and cache Nix store
        uses: actions/cache@v3.3.0
        with:
          key: ${{ runner.os }}-nix-${{ hashfiles('./flake.nix', './flake.lock') }}-
          path: /home/runner/nix
          restore-keys: |
            ${{ runner.os }}-nix-${{ hashfiles('./flake.nix', './flake.lock') }}-
            ${{ runner.os }}-nix-
      - name: Clean npm cache
        run: |
          nix build .#npmCleanCache
          nix run .#npmCleanCache
      - env:
          cache-name: cache-deps
        name: Cache dependencies
        uses: actions/cache@v3
        with:
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**/*.dhall') }}
          path: |
            ~/.npm
            .spago
            output
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Build
        run: |
          nix build .#buildGHPages
          nix run .#buildGHPages
      - name: GitHub Pages action
        uses: peaceiris/actions-gh-pages@v3.9.3
        with:
          force_orphan: true
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./docs
      - name: Collect garbage in /nix/store
        run: nix store gc
name: Nix CI
"on":
  pull_request: {}
  push: {}
  schedule:
    - cron: 0 0 * * *
  workflow_dispatch: {}
